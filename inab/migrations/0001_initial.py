# Generated by Django 4.2.9 on 2024-02-20 18:33

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('pages', models.IntegerField(null=True)),
                ('author', models.CharField(blank=True, max_length=255)),
                ('genre', models.CharField(blank=True, choices=[('action', 'action'), ('fantasy', 'fantasy')], max_length=255)),
                ('publisher', models.CharField(blank=True, max_length=255)),
                ('insertedAt', models.DateField(auto_now_add=True)),
                ('updatedAt', models.DateField(null=True)),
                ('deletedAt', models.DateField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('student', 'student'), ('teacher', 'teacher'), ('guruNilam', 'guruNilam')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(max_length=255)),
                ('birthDate', models.DateField(null=True)),
                ('phoneNo', models.CharField(blank=True, max_length=255)),
                ('awardList', models.IntegerField(null=True)),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inab.classroom')),
                ('groups', models.ManyToManyField(related_name='inab_user_groups', to='auth.group')),
                ('role', models.ManyToManyField(to='inab.role')),
                ('user_permissions', models.ManyToManyField(related_name='inab_user_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Nilam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('pages', models.IntegerField(null=True)),
                ('author', models.CharField(blank=True, max_length=255)),
                ('genre', models.CharField(blank=True, max_length=255)),
                ('publisher', models.CharField(blank=True, max_length=255)),
                ('evaluationComment', models.CharField(blank=True, max_length=255)),
                ('evaluationStatus', models.CharField(blank=True, max_length=255)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inab.user')),
            ],
        ),
        migrations.CreateModel(
            name='Library',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('librarians', models.ManyToManyField(to='inab.user')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inab.school')),
            ],
        ),
        migrations.CreateModel(
            name='GameProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.CharField(blank=True, max_length=255)),
                ('record', models.CharField(blank=True, max_length=255)),
                ('characterList', models.CharField(blank=True, max_length=255)),
                ('itemList', models.CharField(blank=True, max_length=255)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inab.user')),
            ],
        ),
        migrations.AddField(
            model_name='classroom',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inab.school'),
        ),
        migrations.CreateModel(
            name='Borrow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('borrowStatus', models.BooleanField(default=True)),
                ('date', models.DateField()),
                ('borrowReport', models.CharField(blank=True, max_length=255)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inab.book')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inab.user')),
            ],
        ),
        migrations.AddField(
            model_name='book',
            name='library',
            field=models.ManyToManyField(to='inab.library'),
        ),
    ]
